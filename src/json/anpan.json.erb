  {
      <%
        def char_to_option(char)
          return {key_code: char.to_s }                      if (:a..:z).to_a.include?(char.to_sym)
          return {key_code: char.to_s.downcase, modifiers: [:shift] } if (:A..:Z).to_a.include?(char.to_sym)
          return {key_code: char.to_s }                      if ('0'..'9').to_a.include?(char.to_s)
          key_map = {
            "$": {key_code: "4",                      modifiers: [:shift]},
            "!": {key_code: "1",                      modifiers: [:shift]},
            "[": {key_code: "open_bracket",           modifiers: []},
            "{": {key_code: "open_bracket",           modifiers: [:shift]},
            "(": {key_code: "9",                      modifiers: [:shift]},
            "=": {key_code: "equal_sign",             modifiers: []},
            "+": {key_code: "equal_sign",             modifiers: [:shift]},
            ")": {key_code: "0",                      modifiers: [:shift]},
            "}": {key_code: "close_bracket",          modifiers: [:shift]},
            "]": {key_code: "close_bracket",          modifiers: []},
            "*": {key_code: "8",                      modifiers: [:shift]},
            "&": {key_code: "7",                      modifiers: [:shift]},
            "-": {key_code: "hyphen",                 modifiers: []},
            "_": {key_code: "hyphen",                 modifiers: [:shift]},
            "`": {key_code: "grave_accent_and_tilde", modifiers: []},
            "~": {key_code: "grave_accent_and_tilde", modifiers: [:shift]},
            "@": {key_code: "2",                      modifiers: [:shift]},
            "#": {key_code: "3",                      modifiers: [:shift]},
            "%": {key_code: "5",                      modifiers: [:shift]},
            "^": {key_code: "6",                      modifiers: [:shift]},
            "\\": {key_code: "backslash",             modifiers: []},
            "'": {key_code: "quote",                  modifiers: []},
            '"': {key_code: "quote",                  modifiers: [:shift]},
            ",": {key_code: "comma",                  modifiers: []},
            ".": {key_code: "period",                 modifiers: []},
            "/": {key_code: "slash",                  modifiers: []},
            "|": {key_code: "backslash",              modifiers: [:shift]},
            "?": {key_code: "slash",                  modifiers: [:shift]},
            ";": {key_code: "semicolon",              modifiers: []},
            ":": {key_code: "semicolon",              modifiers: [:shift]},
            "<": {key_code: "comma",                  modifiers: [:shift]},
            ">": {key_code: "period",                 modifiers: [:shift]},
        }
        $stderr << "#{char}: #{key_map[char.to_sym].inspect}\n"
        key_map[char.to_sym]
      end

      optional_modifiers = ["caps_lock","left_command","left_control","left_alt","right_command","right_control","right_alt"]
      froms = [
        "`", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=",
        "q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "[", "]", "\\",
        "a", "s", "d", "f", "g", "h", "j", "k", "l", ";", "'",
        "z", "x", "c", "v", "b", "n", "m", ",", ".", "/",

        "~", "!", "@", "#", "$", "%", "^", "&", "*", "(", ")", "_", "+",
        "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "{", "}", "|",
        "A", "S", "D", "F", "G", "H", "J", "K", "L", ":", '"',
        "Z", "X", "C", "V", "B", "N", "M", "<", ">", "?",
      ].map{|k| char_to_option(k)}
      toes  = [
        "$", "!", "[", "{", "(", "=", "+", ")", "}", "]", "*", "&", "`",
        "'", ",", ".", "p", "y", "f", "g", "c", "r", "l", "/", "@", "\\",
        "a", "o", "e", "u", "i", "d", "h", "t", "n", "s", "-",
        ";", "q", "j", "k", "x", "b", "m", "w", "v", "z",

        "~", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "%", "#",
        '"', "<", ">", "P", "Y", "F", "G", "C", "R", "L", "?", "^", "|",
        "A", "O", "E", "U", "I", "D", "H", "T", "N", "S", "_",
        ":", "Q", "J", "K", "X", "B", "M", "W", "V", "Z",
      ].map{|k| char_to_option(k)}
      keys  = [froms, toes].transpose
      manipulators  = []
      manipulators += keys.map{|k|
        {
          "type": "basic",
          "from": _from(k[0][:key_code], k[0][:modifiers] || [], k[0][:optional_modifiers] || []),
          "to":   _to([[k[1][:key_code], k[1][:modifiers]]])
        }
      }
    %>
  "title": "Anpan Keyboard",
  "rules": [
    {
      "description": "Remap keys to use Anpan keyboard layout",
      "manipulators":
      <%= JSON.generate(manipulators) %>
    }
  ]
}
